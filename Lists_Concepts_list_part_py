# 3.3 list
# list
# 列表是Python的内置可变列表，是包含若干元素的有序连续储存空间

# 函数 s.append() 将元素x添加至列表尾部  "带嵌套"
s=[1,2,3]
s.append(5)
print(s)            # [1, 2, 3, 5]
s.append([1,2,3,4,5])
print(s)            # [1, 2, 3, 5, [1, 2, 3, 4, 5]]

# 函数s.extend()   将列表t添加到列表s的尾部
s=[1,2,3]
s.extend(['a','b','c'])
print(s)            # [1, 2, 3, 'a', 'b', 'c']
s.append(5)
print(s)            # [1, 2, 3, 'a', 'b', 'c', 5]

# 函数s.insert()    在列表指定位置i处添加元素x
s=[1,2,3]
s.insert(1,5)
print(s)            # [1, 5, 2, 3]
s.insert(8,9)
print(s)            # [1, 5, 2, 3, 9]
s.insert(-8,9)
print(s)            # [9, 1, 5, 2, 3, 9]
s.insert(-1,6)
print(s)            # [9, 1, 5, 2, 3, 9, 6]

# 函数s.remove()     在列表中删除首次出现的指定元素，若对象不存在，将导致valueError
s=[2,3,1,2,3]
s.remove(2)
print(s)            # [3, 1, 2, 3]

# 函数s.pop()        删除并返回列表对象指定位置的元素，默认为最后一个元素
s=[1,2,3]
print(s.pop())      # 3
print(s)            # [1, 2]
s1=[2,3,4,5,6]
print(s1.pop(4))    # 6
print(s1)           # [2, 3, 4, 5]
# s1.pop(8)   IndexError: pop index out of range

# 函数s.index()      返回第一个为x 元素的下标，若不存在为x的元素，则抛出异常
s=[2,3,3,4,3,6]
print(s.index(3))   # 1
# print(s.index(8)) ValueError: 8 is not in list

# 函数s.count()       返回指定元素x在列表中的出现次数
s=[3,4,5,6,3,7,3,2,5,6]
print(s.count(3))   # 3
print(s.count(6))   # 2

# 函数s.reverse()     对列表元素进行原地翻转
s=[1,2,4,3,5]
s.reverse()
print(s)            # [5, 3, 4, 2, 1]

# 函数s.sort()        对列表元素进行原地排序
s=[2,4,5,2,1,5,3,2,5,3,7,8]
s.sort()
print(s)            # [1, 2, 2, 2, 3, 3, 4, 5, 5, 5, 7, 8]
s=[4,3,4,8,9,0,7,6,1,2]
print(sorted(s))    # [0, 1, 2, 3, 4, 4, 6, 7, 8, 9]
print(s)            # [4, 3, 4, 8, 9, 0, 7, 6, 1, 2]

# list()
# 切片slicing
# * 乘法运算符  +加法运算符  可以扩展；列表对象。
# 该操作实际上创建了一个新列表，而不是真的扩展了原列表

# 3.3.2 列表元素的增加
# append() 、 extend() 、 insert() 、 + 、 *
# 3.3.3 列表元素的删除
# pop() 、 remove()  、 del命令  如 del s[1]
# 3.3.4 列表元素的访问与计数
# 访问  index()   计数 count()
# 3.3.5 成员资格      in 、 not in 、 count() 、 index()
# 3.3.6 切片不会对原来的列表发生改变
# 3.37 列表排序
# sorted()
# sort()
# reversed()  逆向排序  第一个元素与最后一个元素互换位置 第二个元素与倒数第二个元素互换位置 依次类推


# 3.3.8 列表推导式

s=[1,2,3,4,3,6,7,8,9]
s1=[None]
s1=[x*x for x in range(10)]
print(s1)           # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
# 1、使用列表而推导式实现嵌套列表的平铺
vec=[[1,2,3],[1,2,3],[1,2,3]]
s=[num for elem in vec for num in elem]
print(s)            # [1, 2, 3, 1, 2, 3, 1, 2, 3]
# 2、过滤掉不符合标准的元素
s=[1,-5,6,-9,8,9,6,-2,0]
s1=[num for num in s if num > 0]
print(s1)           # [1, 6, 8, 9, 6]
# 3、在列表推导式中使用多个循环，实现多序列元素的任意组合，并且可以结合条件语句过滤特定元素
s1=[(x,y) for x in range(3) for y in range(3)]
print(s1)       # [(0, 0), (0, 1), (0, 2), (1, 0), (1, 1), (1, 2), (2, 0), (2, 1), (2, 2)]
s2=[(x,y) for x in [1,2,3]  for y in [3,2,5] if x != y]
print(s2)       # [(1, 3), (1, 2), (1, 5), (2, 3), (2, 5), (3, 2), (3, 5)]
# 4、使用列表推导式实现矩阵变换
matrix=[[1,2,3,4],[4,3,2,1],[2,3,4,1]]
s2=[[row[i] for row in matrix] for i in range(4)]
print(s2)   # [[1, 4, 2], [2, 3, 3], [3, 2, 4], [4, 1, 1]]
# 等价于

matrix = [[1, 2, 3, 4], [4, 3, 2, 1], [2, 3, 4, 1]]
s2 = []
for i in range(4):
    inner_list = []
    for row in matrix:
        inner_list.append(row[i])
    s2.append(inner_list)
print(s2)



